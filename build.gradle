buildscript {
    ext {
        kotlinVersion = '1.2.10'
        springBootVersion = '2.0.0.M7'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC6-1"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

detekt {
    version = "1.0.0.RC6-1"
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        config = "$projectDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}


group = 'kombient'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    springCloudVersion = 'Finchley.M5'
}

dependencies {
//    compile("org.springframework.boot:spring-boot-starter-web")

    compile("org.jetbrains.kotlin:kotlin-reflect")

    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "me.ramswaroop.jbot:jbot:3.0.2"

    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
    compile('io.github.openfeign:feign-gson:9.5.1')

    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    runtime('org.springframework.boot:spring-boot-devtools')


//    testCompile("org.springframework.boot:spring-boot-starter-test") {
//        exclude(module = "junit")
//    }
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
    testRuntime("org.junit.platform:junit-platform-engine")
//    testRuntime("org.junit.platform:junit-platform-launcher")


    testCompile 'org.assertj:assertj-core:3.9.0'
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtime('org.postgresql:postgresql')


//    compile('org.springframework.cloud:spring-cloud-starter-config')
//    compile('org.springframework.cloud:spring-cloud-config-server')
//    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
//    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
//    compile('org.springframework.cloud:spring-cloud-starter-vault-config')
//    compile('org.springframework.boot:spring-boot-starter-security')
//    compile('org.springframework.boot:spring-boot-starter-web-services')
//    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8")
//    compile("org.jetbrains.kotlin:kotlin-reflect")
//    runtime('mysql:mysql-connector-java')
//    testCompile('org.springframework.cloud:spring-cloud-starter-contract-stub-runner')
//    testCompile('org.springframework.cloud:spring-cloud-starter-contract-verifier')
//    testCompile('org.springframework.cloud:spring-cloud-contract-wiremock')
//    testCompile('org.springframework.security:spring-security-test')
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}