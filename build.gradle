buildscript {
    ext {
        springCloudVersion = 'Finchley.RC1'
        kotlinVersion = '1.2.41'
        springBootVersion = '2.0.2.RELEASE'
        spekVersion = '1.1.5'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC6-1"
    id 'org.jmailen.kotlinter' version '1.11.1'
}

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'


junitPlatform {
//    filters {
//        engines {
//            include 'spek'
//        }
//    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

detekt {
    version = "1.0.0.RC6-1"
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        config = "$projectDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

group = 'kombient'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}


sourceSets {
    main.kotlin.srcDirs 'src/main/kotlin'
    test.kotlin.srcDirs 'src/test/kotlin'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true
    }
}


idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

bootRun {
    systemProperties System.properties
}

dependencies {
//    compile("org.springframework.boot:spring-boot-starter-web")

    compile "org.jetbrains.kotlin:kotlin-reflect"

//    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin"
    compile "org.springframework.cloud:spring-cloud-starter-openfeign"
    compile "io.github.openfeign:feign-gson:9.5.1"

    compile "org.zalando:logbook-spring-boot-starter:+"

    compile "org.springframework.boot:spring-boot-starter-websocket"
    compile "org.springframework.boot:spring-boot-starter-data-rest"
    compile "org.springframework.boot:spring-boot-starter-actuator"

    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.retry:spring-retry"

    compile 'org.jsoup:jsoup:1.11.2'

    compile 'me.xdrop:fuzzywuzzy:1.1.10'

    runtime "org.postgresql:postgresql"

    runtime('org.springframework.boot:spring-boot-devtools')

    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.junit.platform:junit-platform-engine"

    testCompile "org.mockito:mockito-all:2.0.2-beta"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"

    testCompile "org.assertj:assertj-core:3.9.0"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude module: 'junit'
    }

    testCompile "org.jetbrains.spek:spek-api:$spekVersion"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"

    compile('org.springframework.cloud:spring-cloud-starter-vault-config')
    testCompile('org.springframework.cloud:spring-cloud-contract-wiremock')

}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
    distributionType = Wrapper.DistributionType.ALL
}

springBoot {
    buildInfo()
}
